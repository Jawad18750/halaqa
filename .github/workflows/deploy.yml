name: Deploy Halaqa
on:
  push:
    branches: [ main ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # Frontend
      - name: Install (frontend)
        working-directory: quran-tester-app
        run: npm ci

      - name: Build (frontend)
        working-directory: quran-tester-app
        run: npm run build

      - name: Prepare artifacts
        run: |
          mkdir -p artifact_frontend
          cp -r quran-tester-app/dist/* artifact_frontend/
          # SPA fallback for CyberPanel/OpenLiteSpeed
          cat > artifact_frontend/.htaccess << 'EOF'
          RewriteEngine On
          RewriteCond %{REQUEST_FILENAME} -f [OR]
          RewriteCond %{REQUEST_FILENAME} -d
          RewriteRule ^ - [L]
          RewriteRule ^ index.html [L]
          EOF

          mkdir -p artifact_server
          rsync -a server/ artifact_server/ --exclude node_modules --exclude .env

      - name: Setup SSH
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$VPS_SSH_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H "$VPS_HOST" >> ~/.ssh/known_hosts

      - name: Upload and activate (frontend + backend)
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_FRONT_PATH: ${{ secrets.VPS_FRONT_PATH }}
          VPS_API_PATH: ${{ secrets.VPS_API_PATH }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
        run: |
          TS=$(date +%Y%m%d%H%M%S)
          FRONT_RELEASE="${VPS_FRONT_PATH}_releases/${TS}"
          API_RELEASE="${VPS_API_PATH}_releases/${TS}"

          # Create release dirs
          ssh -i ~/.ssh/deploy_key "$VPS_USER@$VPS_HOST" "mkdir -p \"$FRONT_RELEASE\" \"$API_RELEASE\""

          # Upload frontend
          rsync -az --delete -e "ssh -i ~/.ssh/deploy_key" artifact_frontend/ "$VPS_USER@$VPS_HOST:$FRONT_RELEASE/"
          ssh -i ~/.ssh/deploy_key "$VPS_USER@$VPS_HOST" "ln -sfn \"$FRONT_RELEASE\" \"${VPS_FRONT_PATH}_current\""

          # Upload backend
          rsync -az --delete -e "ssh -i ~/.ssh/deploy_key" artifact_server/ "$VPS_USER@$VPS_HOST:$API_RELEASE/"

          # Install deps, write .env, migrate, and (re)start PM2
          ssh -i ~/.ssh/deploy_key "$VPS_USER@$VPS_HOST" bash -lc "
            set -e
            cd \"$API_RELEASE\"
            npm ci --omit=dev
            cat > .env << EOF
            NODE_ENV=$NODE_ENV
            PORT=4000
            DATABASE_URL=$DATABASE_URL
            JWT_SECRET=$JWT_SECRET
            EOF
            npm run migrate
            ln -sfn \"$API_RELEASE\" \"${VPS_API_PATH}_current\"
            command -v pm2 >/dev/null 2>&1 || npm i -g pm2
            (pm2 start \"${VPS_API_PATH}_current/src/index.js\" --name halaqa-api --update-env || pm2 restart halaqa-api --update-env)
            pm2 save
          "
